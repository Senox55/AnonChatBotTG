from aiogram import Dispatcher, Router
from aiogram.types import Message

from keyboards import *

router = Router()


@router.message()
async def process_chatting(message: Message, db):

    chat_info = await db.get_active_chat(message.chat.id)
    is_in_queue = await db.is_in_queue(message.chat.id)
    if chat_info:
        await message.send_copy(chat_id=chat_info[1])
    elif is_in_queue:
        await message.answer(
            '–í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–∏—Å–∫–µ üïµÔ∏è‚Äç‚ôÇÔ∏è.\n'
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –º—ã –Ω–∞–π–¥–µ–º –¥–ª—è –≤–∞—Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞. ‚è≥\n\n'
            '–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫, –Ω–∞–∂–º–∏—Ç–µ "‚úã –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫" –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /stop.',
            reply_markup=keyboard_after_start_research
        )
    else:
        await message.answer(
            '–í—ã –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥',
            reply_markup=keyboard_before_start_search
        )


