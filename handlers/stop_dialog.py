from aiogram import Dispatcher, F, Router
from aiogram.types import Message
from aiogram.filters import Command


from keyboards import *

router = Router()


async def increment_chat_count(user_id: int, db):
    await db.increment_chat_count(user_id)


async def stop_dialog(message: Message, db, bot):
    chat_info = await db.get_active_chat(message.chat.id)
    if chat_info:
        await increment_chat_count(message.chat.id)
        await increment_chat_count(chat_info[1])

        await db.delete_chat(chat_info[0])

        await bot.send_message(
            message.chat.id,
            "–í—ã –ø–æ–∫–∏–Ω—É–ª–∏ —á–∞—Ç ‚ùå",
            reply_markup=keyboard_before_start_search,
        )
        await bot.send_message(
            chat_info[1],
            "–í–∞—à —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∑–∞–≤–µ—Ä—à–∏–ª –¥–∏–∞–ª–æ–≥ ‚ùå",
            reply_markup=keyboard_before_start_search
        )
    else:
        is_in_queue = await db.is_in_queue(message.chat.id)
        if is_in_queue:
            await db.delete_queue(message.chat.id)
            await message.answer(
                'üîï –ü–æ–∏—Å–∫ –æ—Ç–º–µ–Ω—ë–Ω.',
                reply_markup=keyboard_before_start_search
            )
        else:
            await message.answer(
                '‚ö† –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –¥–∏–∞–ª–æ–≥–µ.\n'
                '–ù–∞–ø–∏—à–∏—Ç–µ /search, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞',
                reply_markup=keyboard_before_start_search
            )


@router.message(Command(commands=['stop']))
async def process_stop_command(message: Message):
    await stop_dialog(message)


@router.message(F.text == '‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥')
async def process_stop_button(message: Message):
    await stop_dialog(message)


