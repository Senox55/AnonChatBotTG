from aiogram import F, Router
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from states.registration import RegistrationFSM
from keyboards import *

router = Router()


@router.message(F.text.in_(['–Ø –ü–∞—Ä–µ–Ω—å üôã‚Äç‚ôÇÔ∏è', '–Ø –î–µ–≤—É—à–∫–∞ üôã‚Äç‚ôÄÔ∏è']), StateFilter(RegistrationFSM.fill_gender))
async def set_gender(message: Message, db, translator, state: FSMContext):
    if not await db.get_user_info(message.chat.id):
        if message.text == '–Ø –ü–∞—Ä–µ–Ω—å üôã‚Äç‚ôÇÔ∏è':
            gender = 'm'
        elif message.text == '–Ø –î–µ–≤—É—à–∫–∞ üôã‚Äç‚ôÄÔ∏è':
            gender = 'f'
        else:
            return  # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await db.set_gender(message.chat.id, gender)

        await message.answer(
            translator.get('set_age'),
            reply_markup=keyboard_before_set_age
        )

        await state.set_state(RegistrationFSM.fill_age)


@router.message(
    F.text.in_(['–¥–æ 17 –ª–µ—Ç', '–æ—Ç 18 –¥–æ 21 –≥–æ–¥–∞', '–æ—Ç 22 –¥–æ 25 –ª–µ—Ç', '–æ—Ç 26 –¥–æ 35 –ª–µ—Ç', '–æ—Ç 36 –¥–æ 45 –ª–µ—Ç', '—Å—Ç–∞—Ä—à–µ 46']),
    StateFilter(RegistrationFSM.fill_age))
async def set_age(message: Message, db, translator, state: FSMContext):
    if message.text == '–¥–æ 17 –ª–µ—Ç':
        age = 17
    elif message.text == '–æ—Ç 18 –¥–æ 21 –≥–æ–¥–∞':
        age = 21
    elif message.text == '–æ—Ç 22 –¥–æ 25 –ª–µ—Ç':
        age = 25
    elif message.text == '–æ—Ç 26 –¥–æ 35 –ª–µ—Ç':
        age = 35
    elif message.text == '–æ—Ç 36 –¥–æ 45 –ª–µ—Ç':
        age = 45
    elif message.text == '—Å—Ç–∞—Ä—à–µ 46':
        age = 46
    else:
        return  # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await db.set_age(message.chat.id, age)

    await state.clear()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    await message.answer(
        translator.get('registered'),
        reply_markup=keyboard_before_start_search
    )
