from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart
from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup
from database import Database
from config import bot_token

BOT_TOKEN = bot_token

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

db = Database()

button_start_search = KeyboardButton(text='üòé –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞')
button_stop_search = KeyboardButton(text='‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞')
button_stop_dialog = KeyboardButton(text='–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥')

keyboard_before_start_search = ReplyKeyboardMarkup(keyboard=[[button_start_search]], resize_keyboard=True)
keyboard_after_start_research = ReplyKeyboardMarkup(keyboard=[[button_stop_search]], resize_keyboard=True)
keyboard_after_find_dialog = ReplyKeyboardMarkup(keyboard=[[button_stop_dialog]], resize_keyboard=True)


@dp.message(CommandStart())
async def process_start_command(message: Message):
    await message.answer(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç –±–æ—Ç!\n'
        '–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '
        '"–ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞"',
        reply_markup=keyboard_before_start_search
    )


@dp.message(F.text == '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥')
async def process_stop_dialog(message: Message):
    chat_info = await db.get_active_chat(message.chat.id)
    print(chat_info)
    if chat_info:
        await db.delete_chat(chat_info[0])
        await bot.send_message(
            message.chat.id,
            "–í—ã –ø–æ–∫–∏–Ω—É–ª–∏ —á–∞—Ç",
            reply_markup=keyboard_before_start_search,
        )
        await bot.send_message(
            chat_info[1],
            "–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç",
            reply_markup=keyboard_before_start_search
        )
    else:
        await message.answer(
            '–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –¥–∏–∞–ª–æ–≥–µ',
            reply_markup=keyboard_before_start_search
        )


@dp.message(F.text == 'üòé –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞')
async def process_start_search_command(message: Message):
    chat_two = await db.get_chat()  # –±–µ—Ä–µ–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–æ–∏—Ç –ø–µ—Ä–≤—ã–π –≤ –æ—á–µ—Ä–µ–¥–∏
    if not await(db.create_chat(message.chat.id, chat_two)):
        await db.add_queue(message.chat.id)
        await message.answer(
            '–ò—â–µ–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞...',
            reply_markup=keyboard_after_start_research
        )

    else:
        mess = "–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω!,\n–ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥ –Ω–∞–ø–∏—à–∏—Ç–µ /stop"
        await bot.send_message(
            message.chat.id,
            mess,
            reply_markup=keyboard_after_find_dialog
        )

        await bot.send_message(
            chat_two,
            mess,
            reply_markup=keyboard_after_find_dialog
        )


@dp.message(F.text == '‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞')
async def process_finish_search_command(message: Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –æ—á–µ—Ä–µ–¥–∏
    is_in_queue = await db.is_in_queue(message.chat.id)
    print(is_in_queue)

    if is_in_queue:
        # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –æ—á–µ—Ä–µ–¥–∏, –µ—Å–ª–∏ –æ–Ω –≤ –ø–æ–∏—Å–∫–µ
        await db.delete_queue(message.chat.id)
        await message.answer(
            '–ü–æ–∏—Å–∫ –æ—Ç–º–µ–Ω—ë–Ω',
            reply_markup=keyboard_before_start_search
        )
    else:
        # –£–≤–µ–¥–æ–º–ª—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –ø–æ–∏—Å–∫–µ
        await message.answer(
            '–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø–æ–∏—Å–∫–µ.',
            reply_markup=keyboard_before_start_search
        )


@dp.message()
async def process_chatting(message: Message):
    chat_info = await db.get_active_chat(message.chat.id)
    print(chat_info)
    if chat_info:
        await message.send_copy(chat_id=chat_info[1])
    else:
        await message.answer(
            '–í—ã –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∏ –¥–∏–∞–ª–æ–≥',
            reply_markup=keyboard_before_start_search
        )


if __name__ == '__main__':
    dp.run_polling(bot)
